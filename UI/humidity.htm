<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en"> 
    <head> 
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
        <title>h.a.c.s. XS1 Gauges</title> 
        <script language="javascript" type="text/javascript" src="raphael.js"></script> 
		<script language="javascript" type="text/javascript" src="/libs/jquery.js"></script>
        <script language="javascript" type="text/javascript" src="wso2vis.ctrls.js"></script>
		
        <script type="text/javascript" charset="utf-8"> 
						
			function onDataReceivedWohnzimmerHum(series) 
			{
				wohnzimmernamehum.update(series.label);
				wohnzimmerhumidity.update(series.data[0][1]+" %");
				wohnzimmerhum.setValue(series.data[0][1]);
			}
			function onDataReceivedArbeitszimmerHum(series) 
			{
				arbeitszimmernamehum.update(series.label);
				arbeitszimmerhumidity.update(series.data[0][1]+" %");
				arbeitszimmerhum.setValue(series.data[0][1]);
			}			
			function onDataReceivedSchlafzimmerHum(series) 
			{
				schlafzimmernamehum.update(series.label);
				schlafzimmerhumidity.update(series.data[0][1]+" %");
				schlafzimmerhum.setValue(series.data[0][1]);
			}
			function onDataReceivedKuecheHum(series) 
			{
				kuechenamehum.update(series.label);
				kuechehumidity.update(series.data[0][1]+" %");
				kuechehum.setValue(series.data[0][1]);
			}
			function onDataReceivedServerraumHum(series) 
			{
				terassenamehum.update(series.label);
				terassenhumidity.update(series.data[0][1]+" %");
				Serverraumhum.setValue(series.data[0][1]);
			}
			function onDataReceivedBadHum(series) 
			{
				badnamehum.update(series.label);
				badhumidity.update(series.data[0][1]+" %");
				badhum.setValue(series.data[0][1]);
			}
			function onDataReceivedSchuppenHum(series) 
			{
				schuppennamehum.update(series.label);
				schuppenhumidity.update(series.data[0][1]+" %");
				schuppenhum.setValue(series.data[0][1]);
			}
			function onDataReceivedDachbodenHum(series) 
			{
				dachbodennamehum.update(series.label);
				dachbodenhumidity.update(series.data[0][1]+" %");
				dachbodenhum.setValue(series.data[0][1]);
			}
			
			function HumidityGaugesTick() 
			{
				$.ajax(
				{
					url: "/data/sensor?name=Wohnzimmer_&type=hygrometer&lastentry=true",
					method: 'GET',
					dataType: 'json',
					success: onDataReceivedWohnzimmerHum
				});
				$.ajax(
				{
					url: "/data/sensor?name=Arbeitszimmer_&type=hygrometer&lastentry=true",
					method: 'GET',
					dataType: 'json',
					success: onDataReceivedArbeitszimmerHum
				});				
				$.ajax(
				{
					url: "/data/sensor?name=Schlafzimmer_&type=hygrometer&lastentry=true",
					method: 'GET',
					dataType: 'json',
					success: onDataReceivedSchlafzimmerHum
				});				
				$.ajax(
				{
					url: "/data/sensor?name=Kueche_&type=hygrometer&lastentry=true",
					method: 'GET',
					dataType: 'json',
					success: onDataReceivedKuecheHum
				});				
				$.ajax(
				{
					url: "/data/sensor?name=Serverraum_&type=hygrometer&lastentry=true",
					method: 'GET',
					dataType: 'json',
					success: onDataReceivedServerraumHum
				});				
				$.ajax(
				{
					url: "/data/sensor?name=Bad_oben_&type=hygrometer&lastentry=true",
					method: 'GET',
					dataType: 'json',
					success: onDataReceivedBadHum
				});				
				$.ajax(
				{
					url: "/data/sensor?name=Schuppen_&type=hygrometer&lastentry=true",
					method: 'GET',
					dataType: 'json',
					success: onDataReceivedSchuppenHum
				});
				$.ajax(
				{
					url: "/data/sensor?name=Dachboden_&type=hygrometer&lastentry=true",
					method: 'GET',
					dataType: 'json',
					success: onDataReceivedDachbodenHum
				});					
			};
			

			function drawHumidityGauges(r, offsetX, offsetY) {

				wohnzimmernamehum = new wso2vis.ctrls.Label().text("").fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 100, offsetY + 140); 
				wohnzimmerhumidity = new wso2vis.ctrls.Label().text(" %") .fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 100, offsetY + 120); 
				wohnzimmerhum = new wso2vis.ctrls.CGauge().dialRadius(75).smallTick(5).largeTick(10).minVal(0).maxVal(100).minAngle(90).maxAngle(270).tickcolor("#000").needlecolor("#555").create(r, offsetX + 100, offsetY + 95);

				arbeitszimmernamehum = new wso2vis.ctrls.Label().text("").fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 300, offsetY + 140); 
				arbeitszimmerhumidity = new wso2vis.ctrls.Label().text(" %") .fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 300, offsetY + 120); 
				arbeitszimmerhum = new wso2vis.ctrls.CGauge().dialRadius(75).smallTick(5).largeTick(10).minVal(0).maxVal(100).minAngle(90).maxAngle(270).tickcolor("#000").needlecolor("#555").create(r, offsetX + 300, offsetY + 95);

				schlafzimmernamehum = new wso2vis.ctrls.Label().text("").fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 500, offsetY + 140); 
				schlafzimmerhumidity = new wso2vis.ctrls.Label().text(" %") .fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 500, offsetY + 120); 
				schlafzimmerhum = new wso2vis.ctrls.CGauge().dialRadius(75).smallTick(5).largeTick(10).minVal(0).maxVal(100).minAngle(90).maxAngle(270).tickcolor("#000").needlecolor("#555").create(r, offsetX + 500, offsetY + 95);
				
				kuechenamehum = new wso2vis.ctrls.Label().text("").fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 700, offsetY + 140); 
				kuechehumidity = new wso2vis.ctrls.Label().text(" %") .fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 700, offsetY + 120); 
				kuechehum = new wso2vis.ctrls.CGauge().dialRadius(75).smallTick(5).largeTick(10).minVal(0).maxVal(100).minAngle(90).maxAngle(270).tickcolor("#000").needlecolor("#555").create(r, offsetX + 700, offsetY + 95);

				badnamehum = new wso2vis.ctrls.Label().text("").fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 100, offsetY + 300); 
				badhumidity = new wso2vis.ctrls.Label().text(" %") .fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 100, offsetY + 280); 
				badhum = new wso2vis.ctrls.CGauge().dialRadius(75).smallTick(5).largeTick(10).minVal(0).maxVal(100).minAngle(90).maxAngle(270).tickcolor("#000").needlecolor("#555").create(r, offsetX + 100, offsetY + 250);
				
				terassenamehum = new wso2vis.ctrls.Label().text("").fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 300, offsetY + 300); 
				terassenhumidity = new wso2vis.ctrls.Label().text(" %") .fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 300, offsetY + 280); 
				Serverraumhum = new wso2vis.ctrls.CGauge().dialRadius(75).smallTick(5).largeTick(10).minVal(0).maxVal(100).minAngle(90).maxAngle(270).tickcolor("#000").needlecolor("#555").create(r, offsetX + 300, offsetY + 250);

				schuppennamehum = new wso2vis.ctrls.Label().text("").fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 500, offsetY + 300); 
				schuppenhumidity = new wso2vis.ctrls.Label().text(" %") .fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 500, offsetY + 280); 
				schuppenhum = new wso2vis.ctrls.CGauge().dialRadius(75).smallTick(5).largeTick(10).minVal(0).maxVal(100).minAngle(90).maxAngle(270).tickcolor("#000").needlecolor("#555").create(r, offsetX + 500, offsetY + 250);
				
				dachbodennamehum = new wso2vis.ctrls.Label().text("").fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 700, offsetY + 300); 
				dachbodenhumidity = new wso2vis.ctrls.Label().text(" %") .fontsize(20).fill("#000").stroke("#000").create(r, offsetX + 700, offsetY + 280); 
				dachbodenhum = new wso2vis.ctrls.CGauge().dialRadius(75).smallTick(5).largeTick(10).minVal(0).maxVal(100).minAngle(90).maxAngle(270).tickcolor("#000").needlecolor("#555").create(r, offsetX + 700, offsetY + 250);
				
				HumidityGaugesTick();
				
				//timer = setInterval(HumidityGaugesTick, 30000);
			}
			
			
			function clearAll() {
				r.clear();
				clearInterval(timer);
			}
						
			window.onload = function () {
				r = Raphael("holder", 800, 800);
								
				drawHumidityGauges(r, 0, 0);
			};
			
        </script> 
    </head> 
    <body> 
         <div id="holder" style="height:300px;float:left; position:absolute; "></div>
    </body> 
</html> 
